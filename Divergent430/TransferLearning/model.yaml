# TODO - optionally create a model.py file - if model type is custom...

# TODO - model files
# ifelse - different model types - specify the arguments
type: keras
args:
    weights: model_files/model.weights.h5
    arch: model_files/model.arch.json
    # Note: if you saved the model with model.save(), you can omit `arch: ...`
default_dataloader: . # path to the directory
info:
    authors:
        - name: Nancy Xu 
          github: xnancy
          email: xnancy@stanford.edu
    contributors:
        - name: Nancy Xu 
          github: xnancy 
    doc: Divergent430 is a large-scale multi-task convolutional model for predicting epigenetic features in genome-wide sequences. The base architecture is similar to the Basset model proposed by Kelley, Snoek, Rinn (2016), with multi-task prediction and transferability. This model is trained on 430 cell types with processed publicly available data from ENCODE and fitted for single cell prediction in Divergent430_TransferLearning. Weights from the Divergent430 network are ported by removing the final classification layer. The input of the tensor has to be (1000,4) for N samples, 1000bp window size and 4 nucleotides. Per sample, 430 (in multitask case) or 1 (in transfer learning case) binary classification of chromatin accessbility will be predicted.  
    tags:
        - DNA accessibility
dependencies:
    conda:
        - h5py 
    pip:
        - tensorflow
        - keras==1.2.2
schema:
    inputs:
        data/genome_data_dir:
            shape: (1000,4)
            doc: "1000 base pair sequence of one-hot encoding ACGT"
    targets:
        shape: (1,)
        doc: "Binary 0/1 output for chromatin accessibility in the designated range. 0 = inaccessible, 1 = accessible." 
