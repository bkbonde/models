type: SampleIterator
defined_as: dataloader.SplicingVCFDataloader
args:
  gtf:
    doc: path to the GTF file required by the models (Ensemble)
    example:
        url: https://sandbox.zenodo.org/record/248604/files/test.gtf?download=1
        md5: b20607afe91ec20d6ee79ed95ab0e85b
  fasta_file:
    doc: reference genome fasta file
    example:
        url: https://sandbox.zenodo.org/record/248604/files/hg19.nochr.chr17.fa?download=1
        md5: e3f6630a8323c4306469fdfe8d8b9448
  vcf_file:
    doc: Path to the input vcf file
    example:
        url: https://sandbox.zenodo.org/record/248604/files/test.vcf.gz?download=1
        md5: c152c79906ee3f83834646cc3afae2ad
  split_seq:
    doc: Whether split the sequence in dataloader
    optional: True
  encode:
    doc: If split the sequence, whether one hot encoding
    optional: True
  exon_cut_l:
    doc: when extract exon feature, how many base pair to cut out at the begining of an exon
    optional: True
    example: 0
  exon_cut_r:
    doc: when extract exon feature, how many base pair to cut out at the end of an exon 
    optional: True
    example: 0
  acceptor_intron_cut:
    doc: how many bp to cut out at the end of acceptor intron that consider as acceptor site
    optional: True
    example: 6
  donor_intron_cut:
    doc: how many bp to cut out at the end of donor intron that consider as donor site
    optional: True
    example: 6
  acceptor_intron_len:
    doc: what length in acceptor intron to consider for acceptor site model
    optional: True
    example: 50
  acceptor_exon_len:
    doc: what length in acceptor exon to consider for acceptor site model
    optional: True
    example: 3
  donor_exon_len:
    doc: what length in donor exon to consider for donor site model
    optional: True
    example: 5
  donor_intron_len:
    doc: what length in donor intron to consider for donor site model
    optional: True
    example: 13
info:
  doc: >
    This model first predicts the effect of variants using 5 sub-modules (acceptor intron module, acceptor module, 
    exon module, donor module, donor intron module), and then integrates those predictions using linear regression.
    The model has been trained to predict delta PSI subject to variants.
  authors:
    - name: Jun Cheng
      github: s6juncheng
dependencies:
  conda:
    - bioconda::cyvcf2=0.11.5
    - bioconda::pyranges=0.0.71
    - bioconda::pysam=0.15.3
    - python=3.6
  pip:
    - mmsplice==2.0.0
output_schema:
    inputs:
      seq:
        acceptor_intron:
          doc: alternative sequence of acceptor intron
          shape: (None,4)
          special_type: DNASeq
        acceptor:
          doc: alternative sequence of acceptor
          shape: (None,4)
          special_type: DNASeq        
        exon:
          doc: alternative sequence of exon
          shape: (None,4)
          special_type: DNASeq
        donor:
          doc: alternative sequence of donor
          shape: (None,4)
          special_type: DNASeq
        donor_intron:
          doc: alternative sequence of donor intron          
          shape: (None,4)
          special_type: DNASeq
      mut_seq: 
        acceptor_intron:
          doc: alternative sequence of acceptor intron
          shape: (None,4)
          special_type: DNASeq
        acceptor:
          doc: alternative sequence of acceptor
          shape: (None,4)
          special_type: DNASeq        
        exon:
          doc: alternative sequence of exon
          shape: (None,4)
          special_type: DNASeq
        donor:
          doc: alternative sequence of donor
          shape: (None,4)
          special_type: DNASeq
        donor_intron:
          doc: alternative sequence of donor intron          
          shape: (None,4)
          special_type: DNASeq
      tissue_seq:
        acceptor:
          doc: acceptor sequence for tissue-specific prediction.
          shape: (None,4)
          special_type: DNASeq
        donor:
          doc: donor sequence for tissue-specific prediction.
          shape: (None,4)
          special_type: DNASeq
    metadata:
      variant:
        chrom:
          type: str
          doc: chromsome of variant
        pos:
          type: int
          doc: variant position
        ref:
          type: str
          doc: variant reference
        alt:
          type: str
          doc: variant alternative string
        annotation:
          type: str
          doc: string representation of the variant
      exon:
        chrom:
          type: str
          doc: chromsome of variant
        start:
          type: int
          doc: genomic start position of the retrieved sequence
        end: 
          type: int
          doc: genomic end position of the retrieved sequence
        strand:
          type: str
          doc: strand
        left_overhang:
          type: int
          doc: intron length at the left side of the retrieved sequence
        right_overhang:
          type: int
          doc: intron right at the right side of the retrieved sequence
        annotation:
          type: str
          doc: Annotation of exon
        exon_id:
          type: str
          doc: exon id
        gene_id:
          type: str
          doc: gene id
        gene_name:
          type: str
          doc: gene name
        transcript_id:
          type: str
          doc: transcript id
